/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['pimp.js']) {
  _$jscoverage['pimp.js'] = [];
  _$jscoverage['pimp.js'][1] = 0;
  _$jscoverage['pimp.js'][2] = 0;
  _$jscoverage['pimp.js'][4] = 0;
  _$jscoverage['pimp.js'][5] = 0;
  _$jscoverage['pimp.js'][9] = 0;
  _$jscoverage['pimp.js'][12] = 0;
  _$jscoverage['pimp.js'][14] = 0;
  _$jscoverage['pimp.js'][16] = 0;
  _$jscoverage['pimp.js'][17] = 0;
  _$jscoverage['pimp.js'][19] = 0;
  _$jscoverage['pimp.js'][20] = 0;
  _$jscoverage['pimp.js'][25] = 0;
  _$jscoverage['pimp.js'][26] = 0;
  _$jscoverage['pimp.js'][27] = 0;
  _$jscoverage['pimp.js'][40] = 0;
  _$jscoverage['pimp.js'][41] = 0;
  _$jscoverage['pimp.js'][42] = 0;
  _$jscoverage['pimp.js'][43] = 0;
  _$jscoverage['pimp.js'][44] = 0;
  _$jscoverage['pimp.js'][46] = 0;
  _$jscoverage['pimp.js'][47] = 0;
  _$jscoverage['pimp.js'][50] = 0;
  _$jscoverage['pimp.js'][51] = 0;
  _$jscoverage['pimp.js'][54] = 0;
  _$jscoverage['pimp.js'][58] = 0;
  _$jscoverage['pimp.js'][59] = 0;
  _$jscoverage['pimp.js'][60] = 0;
  _$jscoverage['pimp.js'][61] = 0;
  _$jscoverage['pimp.js'][71] = 0;
  _$jscoverage['pimp.js'][73] = 0;
  _$jscoverage['pimp.js'][75] = 0;
  _$jscoverage['pimp.js'][78] = 0;
  _$jscoverage['pimp.js'][79] = 0;
  _$jscoverage['pimp.js'][80] = 0;
  _$jscoverage['pimp.js'][81] = 0;
  _$jscoverage['pimp.js'][83] = 0;
  _$jscoverage['pimp.js'][84] = 0;
  _$jscoverage['pimp.js'][85] = 0;
  _$jscoverage['pimp.js'][88] = 0;
  _$jscoverage['pimp.js'][89] = 0;
  _$jscoverage['pimp.js'][91] = 0;
  _$jscoverage['pimp.js'][94] = 0;
  _$jscoverage['pimp.js'][95] = 0;
  _$jscoverage['pimp.js'][96] = 0;
  _$jscoverage['pimp.js'][97] = 0;
  _$jscoverage['pimp.js'][99] = 0;
  _$jscoverage['pimp.js'][100] = 0;
  _$jscoverage['pimp.js'][101] = 0;
  _$jscoverage['pimp.js'][102] = 0;
  _$jscoverage['pimp.js'][103] = 0;
  _$jscoverage['pimp.js'][104] = 0;
  _$jscoverage['pimp.js'][105] = 0;
  _$jscoverage['pimp.js'][106] = 0;
  _$jscoverage['pimp.js'][109] = 0;
  _$jscoverage['pimp.js'][114] = 0;
  _$jscoverage['pimp.js'][117] = 0;
  _$jscoverage['pimp.js'][121] = 0;
  _$jscoverage['pimp.js'][122] = 0;
  _$jscoverage['pimp.js'][123] = 0;
  _$jscoverage['pimp.js'][127] = 0;
  _$jscoverage['pimp.js'][128] = 0;
  _$jscoverage['pimp.js'][129] = 0;
  _$jscoverage['pimp.js'][131] = 0;
  _$jscoverage['pimp.js'][132] = 0;
  _$jscoverage['pimp.js'][133] = 0;
  _$jscoverage['pimp.js'][135] = 0;
  _$jscoverage['pimp.js'][136] = 0;
  _$jscoverage['pimp.js'][138] = 0;
  _$jscoverage['pimp.js'][139] = 0;
  _$jscoverage['pimp.js'][140] = 0;
  _$jscoverage['pimp.js'][142] = 0;
  _$jscoverage['pimp.js'][143] = 0;
  _$jscoverage['pimp.js'][146] = 0;
  _$jscoverage['pimp.js'][147] = 0;
  _$jscoverage['pimp.js'][151] = 0;
  _$jscoverage['pimp.js'][155] = 0;
  _$jscoverage['pimp.js'][156] = 0;
  _$jscoverage['pimp.js'][160] = 0;
  _$jscoverage['pimp.js'][161] = 0;
  _$jscoverage['pimp.js'][164] = 0;
  _$jscoverage['pimp.js'][167] = 0;
  _$jscoverage['pimp.js'][168] = 0;
  _$jscoverage['pimp.js'][169] = 0;
  _$jscoverage['pimp.js'][171] = 0;
  _$jscoverage['pimp.js'][172] = 0;
  _$jscoverage['pimp.js'][173] = 0;
  _$jscoverage['pimp.js'][176] = 0;
  _$jscoverage['pimp.js'][177] = 0;
  _$jscoverage['pimp.js'][178] = 0;
  _$jscoverage['pimp.js'][179] = 0;
  _$jscoverage['pimp.js'][180] = 0;
  _$jscoverage['pimp.js'][181] = 0;
  _$jscoverage['pimp.js'][182] = 0;
  _$jscoverage['pimp.js'][185] = 0;
  _$jscoverage['pimp.js'][186] = 0;
  _$jscoverage['pimp.js'][187] = 0;
  _$jscoverage['pimp.js'][192] = 0;
  _$jscoverage['pimp.js'][193] = 0;
  _$jscoverage['pimp.js'][194] = 0;
  _$jscoverage['pimp.js'][200] = 0;
  _$jscoverage['pimp.js'][201] = 0;
  _$jscoverage['pimp.js'][202] = 0;
}
_$jscoverage['pimp.js'][1]++;
(function (global) {
  _$jscoverage['pimp.js'][2]++;
  "use strict";
  _$jscoverage['pimp.js'][4]++;
  if (global.exports) {
    _$jscoverage['pimp.js'][5]++;
    global.exports = Promise;
  }
  else {
    _$jscoverage['pimp.js'][9]++;
    global.Pimp = Promise;
  }
  _$jscoverage['pimp.js'][12]++;
  var callAsap;
  _$jscoverage['pimp.js'][14]++;
  try {
    _$jscoverage['pimp.js'][16]++;
    if (process && process.nextTick) {
      _$jscoverage['pimp.js'][17]++;
      callAsap = process.nextTick;
    }
    else {
      _$jscoverage['pimp.js'][19]++;
      if (setImmediate) {
        _$jscoverage['pimp.js'][20]++;
        callAsap = setImmediate;
      }
    }
  }
  catch (e) {
    _$jscoverage['pimp.js'][25]++;
    callAsap = (function (cb) {
  _$jscoverage['pimp.js'][26]++;
  window.setTimeout((function () {
  _$jscoverage['pimp.js'][27]++;
  cb();
}), 0);
});
  }
  _$jscoverage['pimp.js'][40]++;
  function Promise(fn) {
    _$jscoverage['pimp.js'][41]++;
    var state = null;
    _$jscoverage['pimp.js'][42]++;
    var deferreds = [];
    _$jscoverage['pimp.js'][43]++;
    var value;
    _$jscoverage['pimp.js'][44]++;
    var self = this;
    _$jscoverage['pimp.js'][46]++;
    if ("function" !== typeof fn) {
      _$jscoverage['pimp.js'][47]++;
      return new TypeError("Promise constructor requires a function");
    }
    else {
      _$jscoverage['pimp.js'][50]++;
      try {
        _$jscoverage['pimp.js'][51]++;
        fn(resolve, reject);
      }
      catch (e) {
        _$jscoverage['pimp.js'][54]++;
        reject(e);
      }
    }
    _$jscoverage['pimp.js'][58]++;
    this.then = (function (onFF, onRej) {
  _$jscoverage['pimp.js'][59]++;
  var deferredObj;
  _$jscoverage['pimp.js'][60]++;
  var prom = new Promise((function (rs, rj) {
  _$jscoverage['pimp.js'][61]++;
  deferredObj = {promise: prom, onFulfilled: "function" === typeof onFF && onFF, onRejected: "function" === typeof onRej && onRej, resolve: rs, reject: rj, done: false};
}));
  _$jscoverage['pimp.js'][71]++;
  handleDeferred(deferredObj);
  _$jscoverage['pimp.js'][73]++;
  deferreds.push(deferredObj);
  _$jscoverage['pimp.js'][75]++;
  return prom;
});
    _$jscoverage['pimp.js'][78]++;
    this.inspect = (function () {
  _$jscoverage['pimp.js'][79]++;
  var result = {};
  _$jscoverage['pimp.js'][80]++;
  if (state === null) {
    _$jscoverage['pimp.js'][81]++;
    result.state = "pending";
  }
  else {
    _$jscoverage['pimp.js'][83]++;
    if (state) {
      _$jscoverage['pimp.js'][84]++;
      result.state = "fulfilled";
      _$jscoverage['pimp.js'][85]++;
      result.value = value;
    }
    else {
      _$jscoverage['pimp.js'][88]++;
      result.state = "rejected";
      _$jscoverage['pimp.js'][89]++;
      result.reason = value;
    }
  }
  _$jscoverage['pimp.js'][91]++;
  return result;
});
    _$jscoverage['pimp.js'][94]++;
    function handleDeferred(deferred) {
      _$jscoverage['pimp.js'][95]++;
      var cb;
      _$jscoverage['pimp.js'][96]++;
      if (state === null) {
        _$jscoverage['pimp.js'][97]++;
        return;
      }
      else {
        _$jscoverage['pimp.js'][99]++;
        if (! deferred.done) {
          _$jscoverage['pimp.js'][100]++;
          cb = state? deferred.onFulfilled: deferred.onRejected;
          _$jscoverage['pimp.js'][101]++;
          if (cb) {
            _$jscoverage['pimp.js'][102]++;
            callAsap((function () {
  _$jscoverage['pimp.js'][103]++;
  var ret;
  _$jscoverage['pimp.js'][104]++;
  try {
    _$jscoverage['pimp.js'][105]++;
    ret = cb(value);
    _$jscoverage['pimp.js'][106]++;
    deferred.resolve(ret);
  }
  catch (e) {
    _$jscoverage['pimp.js'][109]++;
    deferred.reject(e);
  }
}));
          }
          else {
            _$jscoverage['pimp.js'][114]++;
            state? deferred.resolve(value): deferred.reject(value);
          }
          _$jscoverage['pimp.js'][117]++;
          deferred.done = true;
        }
      }
}
    _$jscoverage['pimp.js'][121]++;
    function callDeferreds() {
      _$jscoverage['pimp.js'][122]++;
      for (var i in deferreds) {
        _$jscoverage['pimp.js'][123]++;
        handleDeferred(deferreds[i]);
}
}
    _$jscoverage['pimp.js'][127]++;
    function resolve(val) {
      _$jscoverage['pimp.js'][128]++;
      if (state !== null) {
        _$jscoverage['pimp.js'][129]++;
        return;
      }
      _$jscoverage['pimp.js'][131]++;
      if (val) {
        _$jscoverage['pimp.js'][132]++;
        if (self === val) {
          _$jscoverage['pimp.js'][133]++;
          reject(new TypeError("Promise cannot resolve to itself. Sorry brah!"));
        }
        else {
          _$jscoverage['pimp.js'][135]++;
          if (val.constructor && val.constructor.name === "Promise") {
            _$jscoverage['pimp.js'][136]++;
            val.then(resolve, reject);
          }
          else {
            _$jscoverage['pimp.js'][138]++;
            if ("function" === typeof val || "object" === typeof val) {
              _$jscoverage['pimp.js'][139]++;
              try {
                _$jscoverage['pimp.js'][140]++;
                var then = val.then;
                _$jscoverage['pimp.js'][142]++;
                if ("function" === typeof then) {
                  _$jscoverage['pimp.js'][143]++;
                  resolveThenable(then.bind(val), resolve, reject);
                }
                else {
                  _$jscoverage['pimp.js'][146]++;
                  state = true;
                  _$jscoverage['pimp.js'][147]++;
                  value = val;
                }
              }
              catch (e) {
                _$jscoverage['pimp.js'][151]++;
                reject(e);
              }
            }
            else {
              _$jscoverage['pimp.js'][155]++;
              state = true;
              _$jscoverage['pimp.js'][156]++;
              value = val;
            }
          }
        }
      }
      else {
        _$jscoverage['pimp.js'][160]++;
        state = true;
        _$jscoverage['pimp.js'][161]++;
        value = val;
      }
      _$jscoverage['pimp.js'][164]++;
      callDeferreds();
}
    _$jscoverage['pimp.js'][167]++;
    function reject(reason) {
      _$jscoverage['pimp.js'][168]++;
      if (state !== null) {
        _$jscoverage['pimp.js'][169]++;
        return;
      }
      _$jscoverage['pimp.js'][171]++;
      state = false;
      _$jscoverage['pimp.js'][172]++;
      value = reason;
      _$jscoverage['pimp.js'][173]++;
      callDeferreds();
}
    _$jscoverage['pimp.js'][176]++;
    function resolveThenable(fn, onFF, onRej) {
      _$jscoverage['pimp.js'][177]++;
      var flag = false;
      _$jscoverage['pimp.js'][178]++;
      try {
        _$jscoverage['pimp.js'][179]++;
        fn((function (y) {
  _$jscoverage['pimp.js'][180]++;
  if (! flag) {
    _$jscoverage['pimp.js'][181]++;
    flag = true;
    _$jscoverage['pimp.js'][182]++;
    onFF(y);
  }
}), (function (r) {
  _$jscoverage['pimp.js'][185]++;
  if (! flag) {
    _$jscoverage['pimp.js'][186]++;
    flag = true;
    _$jscoverage['pimp.js'][187]++;
    onRej(r);
  }
}));
      }
      catch (e) {
        _$jscoverage['pimp.js'][192]++;
        if (! flag) {
          _$jscoverage['pimp.js'][193]++;
          flag = true;
          _$jscoverage['pimp.js'][194]++;
          onRej(e);
        }
      }
}
}
  _$jscoverage['pimp.js'][200]++;
  Promise.prototype["catch"] = (function (fn) {
  _$jscoverage['pimp.js'][201]++;
  return this.then((function (v) {
  _$jscoverage['pimp.js'][202]++;
  return v;
}), fn);
});
})(typeof module === "undefined"? window: module);
_$jscoverage['pimp.js'].source = ["(function(global) {","  'use strict';","","  if (global.exports) {","    global.exports = Promise;","  }","  //if browser","  else {","    global.Pimp = Promise;","  }","","  var callAsap;","","  try {","    //if node","    if (process &amp;&amp; process.nextTick) {","      callAsap = process.nextTick;","    }","    else if (setImmediate) {","      callAsap = setImmediate;","    }","  }","  catch (e) {","    //browser","    callAsap = function(cb) {","      window.setTimeout(function() {","        cb();","      }, 0);","    };","  }","","  //todo:","  //think about adding the subtle bits as outlined by Domenic at the link below","  //https://gist.github.com/thanpolas/5758331","  //not entirely convinced with it since it may cause handleDeferreds to be ","  //async sometimes and sync other times","  //but it can help speed things up by not deferring execution to the next","  //run of the event loop when not needed","","  function Promise(fn) {","    var state = null; // pending = null, fulfilled = true, rejected = false","    var deferreds = [];","    var value;","    var self = this;","","    if (\"function\" !== typeof fn) {","      return new TypeError(\"Promise constructor requires a function\");","    }","    else {","      try {","        fn(resolve, reject);","      }","      catch (e) {","        reject(e);","      }","    }","","    this.then = function(onFF, onRej) {","      var deferredObj;","      var prom = new Promise(function(rs, rj) {","        deferredObj = {","          promise: prom,","          onFulfilled: \"function\" === typeof onFF &amp;&amp; onFF,","          onRejected: \"function\" === typeof onRej &amp;&amp; onRej,","          resolve: rs,","          reject: rj,","          done: false","        };","      });","","      handleDeferred(deferredObj);","","      deferreds.push(deferredObj);","","      return prom;","    };","","    this.inspect = function() {","      var result = {};","      if (state === null) {","        result.state = \"pending\";","      }","      else if (state) {","        result.state = \"fulfilled\";","        result.value = value;","      }","      else {","        result.state = \"rejected\";","        result.reason = value;","      }","      return result;","    };","","    function handleDeferred(deferred) {","      var cb;","      if (state === null) {","        return;","      }","      else if (!deferred.done) {","        cb = state ? deferred.onFulfilled : deferred.onRejected;","        if (cb) {","          callAsap(function() {","            var ret;","            try {","              ret = cb(value);","              deferred.resolve(ret);","            }","            catch (e) {","              deferred.reject(e);","            }","          });","        }","        else {","          state ? deferred.resolve(value) : deferred.reject(value);","        }","","        deferred.done = true;","      }","    }","","    function callDeferreds() {","      for (var i in deferreds) {","        handleDeferred(deferreds[i]);","      }","    }","","    function resolve(val) {","      if (state !== null) {","        return;","      }","      if (val) {","        if (self === val) {","          reject(new TypeError(\"Promise cannot resolve to itself. Sorry brah!\"));","        }","        else if (val.constructor &amp;&amp; val.constructor.name === \"Promise\") {","          val.then(resolve, reject);","        }","        else if (\"function\" === typeof val || \"object\" === typeof val) {","          try {","            var then = val.then;","","            if (\"function\" === typeof then) {","              resolveThenable(then.bind(val), resolve, reject);","            }","            else {","              state = true;","              value = val;","            }","          }","          catch (e) {","            reject(e);","          }","        }","        else {","          state = true;","          value = val;","        }","      }","      else {","        state = true;","        value = val;","      }","","      callDeferreds();","    }","","    function reject(reason) {","      if (state !== null) {","        return;","      }","      state = false;","      value = reason;","      callDeferreds();","    }","","    function resolveThenable(fn, onFF, onRej) {","      var flag = false;","      try {","        fn(function(y) {","          if (!flag) {","            flag = true;","            onFF(y);","          }","        }, function(r) {","          if (!flag) {","            flag = true;","            onRej(r);","          }","        });","      }","      catch (e) {","        if (!flag) {","          flag = true;","          onRej(e);","        }","      }","    }","  }","","  Promise.prototype.catch = function(fn) {","    return this.then(function(v) {","      return v;","    }, fn);","  };","})(typeof module === \"undefined\" ? window : module);"];
